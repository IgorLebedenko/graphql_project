schema {
    query: Query
    mutation: Mutation
}

type Query {
    findAll(criteria: UserCriteria!): [User]
    findOne(id: Int!): User
}

type Mutation {
    create(input: UserInput!): User
    create(firstName: String!, lastName: String!, birthDate: Date!): User
    update(id: Int!, input: UserInput!): User
    update(id: Int!, firstName: String!, lastName: String!, birthDate: Date!): User
    delete(id: Int!): Boolean
}

type User {
    id: Int!
    firstName: String!
    lastName: String!
    salary: Int
    birthDate: Date!
}

enum Direction {
    ASC
    DESC
}

input UserCriteria {
    firstName: String
    lastName: String
    salary: Int
    birthDate: Date
    page: Int
    size: Int
    sortedBy: String
    sortDirection: Direction
}

input Sort {
    property: String!
    direction: Direction!
}

input UserInput {
    firstName: String!
    lastName: String!
    salary: Int
    birthDate: Date!
}

scalar Date